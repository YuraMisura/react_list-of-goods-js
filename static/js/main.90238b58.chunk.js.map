{"version":3,"sources":["components/GoodsList/GoodsList.jsx","App.jsx","index.jsx"],"names":["GoodsList","goods","map","good","goodsFromServer","SORT_FIELD_LENGTH","SORT_FIELD_ORDER","App","useState","sortField","setSortField","isReversed","setIsReversed","visablGoods","preparedGoods","sort","good1","good2","length","localeCompare","reverse","getPreparedGoods","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"mPAAaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SCGjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAoB,SACpBC,EAAmB,iBAuBlB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAxBR,SAA0BZ,EAAOQ,EAAWE,GAC1C,IAAMG,EAAa,YAAOb,GAiB1B,OAfIQ,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,OAASD,EAAMC,OAE9B,KAAKZ,EACH,OAAOU,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAKRN,EAAaG,EAAcM,UAAYN,EAM1BO,CAClBjB,EAAiBK,EAAWE,GAQ9B,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBAAkB,CAChB,WAAYf,IAAcH,IAG9BmB,QAAS,kBAAMf,EAAaJ,IAP9B,iCAYA,wBACEiB,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,WAAYf,IAAcJ,IAG9BoB,QAAS,kBAAMf,EAAaL,IAP9B,4BAYA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,YAAab,IAGjBc,QAAS,kBAAMb,GAAeD,IAPhC,sBAYEF,GAAaE,IACb,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAhDU,WAClBb,GAAc,GACdF,EAAa,KA2CP,sBAUJ,cAAC,EAAD,CAAWT,MAAOY,QCtGxBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.90238b58.chunk.js","sourcesContent":["export const GoodsList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>{good}</li>\n    ))}\n  </ul>\n);\n","import cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_LENGTH = 'length';\nconst SORT_FIELD_ORDER = 'alphabetically';\n\nfunction getPreparedGoods(goods, sortField, isReversed) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        case SORT_FIELD_ORDER:\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return isReversed ? preparedGoods.reverse() : preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visablGoods = getPreparedGoods(\n    goodsFromServer, sortField, isReversed,\n  );\n\n  const resetCkilck = () => {\n    setIsReversed(false);\n    setSortField('');\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info', {\n              'is-light': sortField !== SORT_FIELD_ORDER,\n            },\n          )}\n          onClick={() => setSortField(SORT_FIELD_ORDER)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success', {\n              'is-light': sortField !== SORT_FIELD_LENGTH,\n            },\n          )}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning', {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetCkilck}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList goods={visablGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}